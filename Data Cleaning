
/****** Script for SelectTopNRows command from SSMS  ******/
--Cleaning data in sql queries
SELECT *
  FROM [PortfolioProject].[dbo].[NashvilleHousing]

  --Standardize date format
  SELECT SaleDateConverted, CONVERT(date,SaleDate) 
  FROM [PortfolioProject].[dbo].[NashvilleHousing]

  ALTER TABLE NashvilleHousing
  Add SaleDateConverted Date;

  UPDATE NashvilleHousing
  SET SaleDateConverted = CONVERT(date,SaleDate)

  -- Populate property address
  SELECT a.ParcelID,a.PropertyAddress,b.ParcelID,b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
  FROM [PortfolioProject].[dbo].[NashvilleHousing] a
  JOIN [PortfolioProject].[dbo].[NashvilleHousing] b
       on a.ParcelID = b.ParcelID
	   AND a.[UniqueID ] <> b.[UniqueID ]
  WHERE a.PropertyAddress is null

  UPDATE a
  SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
  FROM [PortfolioProject].[dbo].[NashvilleHousing] a
  JOIN [PortfolioProject].[dbo].[NashvilleHousing] b
       on a.ParcelID = b.ParcelID
	   AND a.[UniqueID ] <> b.[UniqueID ]
  WHERE a.PropertyAddress is null

  -- Breaking out address into individual columns(Address, City, State)
  SELECT PropertyAddress
  FROM [PortfolioProject].[dbo].[NashvilleHousing]

  SELECT
  SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress) -1) as Address
  ,SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress) +1 , LEN(PropertyAddress)) as City
  FROM [PortfolioProject].[dbo].[NashvilleHousing]

  ALTER TABLE NashvilleHousing
  Add PropertysplitAddress Nvarchar(255);

  UPDATE NashvilleHousing
  SET PropertysplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress) -1)

  ALTER TABLE NashvilleHousing
  Add PropertysplitCity Nvarchar(255);

  UPDATE NashvilleHousing
  SET PropertysplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress) +1 , LEN(PropertyAddress))

  
  -- Seperate owner address with Parse
  SELECT 
  PARSENAME(REPLACE(Owneraddress, ',', '.'), 3)
  ,PARSENAME(REPLACE(Owneraddress, ',', '.'), 2)
  ,PARSENAME(REPLACE(Owneraddress, ',', '.'), 1)
  FROM [PortfolioProject].[dbo].[NashvilleHousing]

  ALTER TABLE NashvilleHousing
  Add OwnerAddresssplit Nvarchar(255);

  UPDATE NashvilleHousing
  SET OwnerAddresssplit = PARSENAME(REPLACE(Owneraddress, ',', '.'), 3) 

  ALTER TABLE NashvilleHousing
  Add OwnerCitySplit Nvarchar(255);

  UPDATE NashvilleHousing
  SET OwnerCitySplit = PARSENAME(REPLACE(Owneraddress, ',', '.'), 2)

    ALTER TABLE NashvilleHousing
  Add OwnerStateSplit Nvarchar(255);

  UPDATE NashvilleHousing
  SET OwnerStateSplit = PARSENAME(REPLACE(Owneraddress, ',', '.'), 1)

  SELECT *
  FROM [PortfolioProject].[dbo].[NashvilleHousing]
  -- Change Y and N to Yes and No in "Sold as Vacant" field

  SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
  FROM [PortfolioProject].[dbo].[NashvilleHousing]
  GROUP BY SoldAsVacant
  ORDER BY 2

  Select SoldAsVacant
  , CASE When SoldAsVacant = 'Y' THEN 'Yes'
		 When SoldAsVacant = 'N' THEN 'No'
	ELSE SoldAsVacant
	END
FROM [PortfolioProject].[dbo].[NashvilleHousing]

UPDATE NashvilleHousing
  SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
		 When SoldAsVacant = 'N' THEN 'No'
	ELSE SoldAsVacant
	END
-- Remove duplicates
WITH RowNumCTE AS(
SELECT *,
       ROW_NUMBER() OVER (
	   PARTITION BY ParcelID,
	                PropertyAddress,
					SalePrice,
					SaleDate,
					LegalReference
					ORDER BY
						UniqueID
						) row_num
FROM [PortfolioProject].[dbo].[NashvilleHousing]
)
SELECT *
FROM RowNumCTE
WHERE row_num > 1
Order by PropertyAddress
--Deleting unused columns


SELECT *
FROM [PortfolioProject].[dbo].[NashvilleHousing]

ALTER TABLE [PortfolioProject].[dbo].[NashvilleHousing]
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

ALTER TABLE [PortfolioProject].[dbo].[NashvilleHousing]
DROP COLUMN SaleDate
